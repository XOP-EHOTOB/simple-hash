{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","id","setPopout","useState","icon","width","height","history","setHistory","decodeURI","window","location","hash","slice","length","value","setValue","snackbar","setSnackbar","copy","text","bridge","send","onClose","before","size","style","background","fill","setMd5","a","md5","document","getElementById","mode","margin","padding","header","className","onClick","marginBottom","setSha1","sha1","setSha256","sha256","setSha512","sha512","toString","PanelHeader","href","target","onChange","type","placeholder","actions","title","autoclose","actionsLayout","App","activePanel","setActivePanel","fetchedUser","setUser","ScreenSpinner","popout","useEffect","user","fetchData","View","go","e","currentTarget","dataset","to","subscribe","detail","data","schemeAttribute","createAttribute","scheme","body","attributes","setNamedItem","ReactDOM","render"],"mappings":"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","file":"static/js/main.b1353276.chunk.js","sourcesContent":["import React, {useState } from 'react';\nimport './Home.css'\nimport { Icon32HashtagOutline, Icon16Done } from '@vkontakte/icons';\nimport md5 from 'md5'\nimport sha1 from 'sha1'\nimport sha256 from 'sha256'\nimport sha512 from 'sha512'\n\nimport {Panel, Card, Input, Button, Group, Header, Placeholder, Snackbar, Avatar, Footer, Alert, Link} from '@vkontakte/vkui';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport bridge from '@vkontakte/vk-bridge'\n\nconst Home = ({ id, setPopout }) => {\n\tconst [history, setHistory] = useState(<Placeholder\n\t\ticon={<Icon32HashtagOutline width={56} height={56}/>}\n\t  >\nЗдесь появится результат шифрования.\n\t  </Placeholder>)\n\tconst [value, setValue] = useState(decodeURI(window.location.hash.slice(1,window.location.hash.length)))\n\tconst [snackbar, setSnackbar] = useState(null)\n\n\n\tconst showBanner = () => {\n\t\treturn true\n\t\tif (x = 2) {\n\t\t  bridge.sendPromise('VKWebAppShowNativeAds', { ad_format: 'interstitial' })\n\t\t}\n\t  }\n\n\n\t  const copy = (hash, text) => {\n\t\tbridge.send(\"VKWebAppCopyText\", {text: hash})\n\n\t\tsetSnackbar(\n\t\t\t<Snackbar\n\t\t\t  onClose={() => setSnackbar(null)}\n\t\t\t  before={<Avatar size={24} style={{ background: 'var(--accent)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\n\t\t\t>\n\t\t\t  {text}\n\t\t\t</Snackbar>\n\t\t)\n\t  }\n\t  \n\tconst setMd5 = async () => {\n\t\tlet hash = md5(document.getElementById('home-input').value)\n\t\tsetHistory(\n\t\t<Card size=\"l\" mode=\"shadow\" style={{margin: 10, padding: 5}}>\n\t\t\t<Header mode=\"secondary\">Метод - MD5</Header>\n\t\t\t<Group mode=\"plain\" header={<Header mode=\"secondary\">Строка:</Header>}>\n\t\t\t<p className='string' onClick={() => { copy(document.getElementById('home-input').value, 'Строка скопирована') }}>{document.getElementById('home-input').value}</p>\n\t\t\t</Group>\n\t\t\t<Group mode=\"plain\" header={<Header mode=\"secondary\">Результат:</Header>}>\n\t\t\t<p className='hash' style={{marginBottom: 10}} onClick={() => { copy(hash, 'Хэш копирован') }}>{hash}</p>\n\t\t\t</Group>\n\t\t</Card>\n\t\t)\n\t\tshowBanner()\n\t}\n\n\tconst setSha1 = async () => {\n\t\tlet hash = sha1(document.getElementById('home-input').value)\n\t\tsetHistory(\n\t\t\t<Card size=\"l\" mode=\"shadow\" style={{margin: 10, padding: 5}}>\n\t\t\t<Header mode=\"secondary\">Метод - SHA1</Header>\n\t\t\t<Group mode=\"plain\" header={<Header mode=\"secondary\">Строка:</Header>}>\n\t\t\t<p className='string' onClick={() => { copy(document.getElementById('home-input').value, 'Строка скопирована') }}>{document.getElementById('home-input').value}</p>\n\t\t\t</Group>\n\t\t\t<Group mode=\"plain\" header={<Header mode=\"secondary\">Результат:</Header>}>\n\t\t\t<p className='hash' style={{marginBottom: 10}} onClick={() => { copy(hash, 'Хэш копирован') }}>{hash}</p>\n\t\t\t</Group>\n\t\t</Card>\n\t\t\t)\n\t\t\tshowBanner()\n\t}\n\tconst setSha256 = async () => {\n\t\tlet hash = sha256(document.getElementById('home-input').value)\n\t\tsetHistory(\n\t\t\t<Card size=\"l\" mode=\"shadow\" style={{margin: 10, padding: 5}}>\n\t\t\t<Header mode=\"secondary\">Метод - SHA256</Header>\n\t\t\t<Group mode=\"plain\" header={<Header mode=\"secondary\">Строка:</Header>}>\n\t\t\t<p className='string' onClick={() => { copy(document.getElementById('home-input').value, 'Строка скопирована') }}>{document.getElementById('home-input').value}</p>\n\t\t\t</Group>\n\t\t\t<Group mode=\"plain\" header={<Header mode=\"secondary\">Результат:</Header>}>\n\t\t\t<p className='hash' style={{marginBottom: 10}} onClick={() => { copy(hash, 'Хэш копирован') }}>{hash}</p>\n\t\t\t</Group>\n\t\t</Card>\n\t\t\t)\n\t\t\tshowBanner()\n\t}\n\tconst setSha512 = async () => {\n\t\tlet hash = sha512(document.getElementById('home-input').value)\n\t\tsetHistory(\n\t\t\t<Card size=\"l\" mode=\"shadow\" style={{margin: 10, padding: 5}}>\n\t\t\t<Header mode=\"secondary\">Метод - SHA512</Header>\n\t\t\t<Group mode=\"plain\" header={<Header mode=\"secondary\">Строка:</Header>}>\n\t\t\t<p className='string' onClick={() => { copy(document.getElementById('home-input').value, 'Строка скопирована') }}>{document.getElementById('home-input').value}</p>\n\t\t\t</Group>\n\t\t\t<Group mode=\"plain\" header={<Header mode=\"secondary\">Результат:</Header>}>\n\t\t\t<p className='hash' style={{marginBottom: 10}} onClick={() => { copy(hash, 'Хэш копирован') }}>{hash.toString('hex')}</p>\n\t\t\t</Group>\n\t\t</Card>\n\t\t\t)\n\t\t\tshowBanner()\n\t}\n\n\t\n\treturn (\n\t\t<Panel id={id}>\n\t\t\t<PanelHeader>Simple hash generator</PanelHeader>\n\t\t\t\t<div className='info' >\nНа этой странице вы можете зашивровать сообщение доступными алгоритмами.\nВ таких сообщения невозможна подмена. Подробнее про <Link href='https://www.kaspersky.ru/blog/the-wonders-of-hashing/3633/' target='_blank'>Хэш</Link>\n\t\t\t\t</div>\n\n\t\t\t<Input \n\t\t\tvalue={value}\n\t\t\tonChange={() => {\n\t\t\t\tsetValue(document.getElementById('home-input').value)\n\t\t\t}}\n\t\t\tstyle={{margin: 5}} \n\t\t\ttype=\"text\" \n\t\t\tplaceholder=\"Строка, которую вы хотите зашифровать\" \n\t\t\tid='home-input'/>\n\t\t\t<div className='home-buttons'>\n\t\t\t\t<Button onClick={setMd5}>MD5</Button>\n\t\t\t\t<Button onClick={setSha1}>SHA1</Button>\n\t\t\t\t<Button onClick={setSha256}>SHA256</Button>\n\t\t\t\t<Button onClick={setSha512}>SHA512</Button>\n\t\t\t</div>\n\t\t\t<Group>\n\t\t\t<Header mode=\"secondary\">Ваше последдне сообщение</Header>\n\t\t\t{history}\n\t\t\t</Group>\n\t\t\t<Footer><Button mode=\"tertiary\" onClick={() => {\n\t\t\t\tsetPopout(\n\t\t\t\t\t<Alert\n        \t\t\t\tactions={[\n          \t\t\t{\n            \t\t\ttitle: \"ОК\",\n            \t\t\tautoclose: true,\n            \t\t\tmode: \"cancel\",\n          \t\t\t},\n       \t\t\t\t\t]}\n        \t\t\t\tactionsLayout=\"vertical\"\n        \t\t\t\tonClose={() => {setPopout(null)}}\n        \t\t\t\theader=\"Интеграция приложения\"\n        \t\t\t\ttext={`Передайте параметр hash для открытия приложения с заготовленной строкой для шифрования. Например: https://m.vk.com/app7433551#default_string - откроет приложение с заготовленной стрококй \"default_string\"`}\n      \t\t\t\t/>\n\t\t\t\t)\n\t\t\t}}>Интеграция</Button></Footer>\n\t\t\t<Footer>Made by <Link href='https://хор-енотов.рф' target='_blank'>XOP EHOTOB</Link></Footer>\n\t\t\t{snackbar}\n\t\t</Panel>\n\t);\n} \n\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport { AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport './App.css'\n\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} setPopout={setPopout} />\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\nbridge.subscribe(({ detail: { type, data }}) => {\n  if (type === 'VKWebAppUpdateConfig') {\n    const schemeAttribute = document.createAttribute('scheme');\n    schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n    document.body.attributes.setNamedItem(schemeAttribute);\n  }\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}